container:
  image: ubuntu:20.04
  cpu: 8
  memory: 16G

env:
  # Device config (underscore for device name, dash for folder)
  DEVICE: Infinix_X6512
  DEVICE_PATH: device/infinix/Infinix-X6512
  
  # TWRP Manifest
  MANIFEST: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git
  MANIFEST_BRANCH: twrp-11
  
  # Device tree repo
  DT_REPO: https://github.com/manusia251/twrp-test
  DT_BRANCH: main
  
  # Build config
  USE_CCACHE: 1
  CCACHE_SIZE: 10G
  ALLOW_MISSING_DEPENDENCIES: true
  LC_ALL: C

task:
  name: TWRP Build - Infinix X6512
  timeout_in: 60m
  
  install_script: |
    echo "=== Installing dependencies ==="
    export DEBIAN_FRONTEND=noninteractive
    apt-get update -qq
    apt-get install -y -qq --no-install-recommends \
      bc bison build-essential ccache curl flex g++-multilib gcc-multilib \
      git gnupg gperf lib32ncurses5-dev lib32z1-dev liblz4-tool \
      libncurses5 libssl-dev libxml2 libxml2-utils lzop \
      python python3 rsync unzip zip openjdk-8-jdk-headless \
      ca-certificates wget file make openssh-client
    wget -q https://storage.googleapis.com/git-repo-downloads/repo -O /usr/bin/repo
    chmod a+x /usr/bin/repo
    ccache -M $CCACHE_SIZE
    git config --global user.email "ci@cirrus.com"
    git config --global user.name "Cirrus CI"
  
  sync_script: |
    echo "=== Syncing TWRP sources ==="
    mkdir -p /tmp/twrp && cd /tmp/twrp
    repo init --depth=1 -u $MANIFEST -b $MANIFEST_BRANCH --no-repo-verify
    repo sync -c -j$(nproc) --force-sync --no-clone-bundle --no-tags --optimized-fetch
    echo "Sync completed"
  
  device_tree_script: |
    echo "=== Setting up device tree ==="
    cd /tmp/twrp
    
    # Clone repo
    git clone --depth=1 $DT_REPO -b $DT_BRANCH temp_dt
    
    # Copy device tree to proper location (keep folder name with dash)
    mkdir -p device/infinix
    cp -r temp_dt/Infinix-X6512 device/infinix/
    rm -rf temp_dt
    
    cd $DEVICE_PATH
    
    # Remove vendorsetup.sh if exists (deprecated)
    rm -f vendorsetup.sh
    
    # Fix omni_infinix_x6512.mk path reference
    echo "=== Fixing device tree files ==="
    
    # Recreate omni_Infinix_X6512.mk with correct paths
    cat > omni_Infinix_X6512.mk << 'EOF'
    # Inherit from those products. Most specific first.
    $(call inherit-product, $(SRC_TARGET_DIR)/product/full_base_telephony.mk)
    
    # Inherit some common Omni stuff.
    $(call inherit-product, vendor/omni/config/common.mk)
    
    # Inherit from device (folder still uses dash)
    $(call inherit-product, device/infinix/Infinix-X6512/device.mk)
    
    PRODUCT_DEVICE := Infinix_X6512
    PRODUCT_NAME := omni_Infinix_X6512
    PRODUCT_BRAND := Infinix
    PRODUCT_MODEL := Infinix X6512
    PRODUCT_MANUFACTURER := infinix
    
    PRODUCT_GMS_CLIENTID_BASE := android-infinix
    
    PRODUCT_BUILD_PROP_OVERRIDES += \
        PRIVATE_BUILD_DESC="vnd_x6512_h6126-user 11 RP1A.200720.011 545435 release-keys"
    
    BUILD_FINGERPRINT := Infinix/X6512-OP/Infinix-X6512:11/RP1A.200720.011/240220V535:user/release-keys
    EOF
    
    # Verify files exist
    echo "=== Verifying files ==="
    for file in Android.mk AndroidProducts.mk BoardConfig.mk device.mk omni_${DEVICE}.mk recovery.fstab; do
      if [ -f "$file" ]; then
        echo "✓ $file exists"
      else
        echo "✗ Missing $file"
        exit 1
      fi
    done
    
    # Check prebuilt files
    if [ -f "prebuilt/kernel" ] && [ -f "prebuilt/dtb.img" ]; then
      echo "✓ Prebuilt kernel and dtb found"
    else
      echo "✗ Missing prebuilt files"
      exit 1
    fi
    
    # Add touchscreen init
    mkdir -p recovery/root
    cat > recovery/root/init.recovery.touch.rc << 'TOUCH_EOF'
    on boot
        write /sys/bus/spi/drivers/omnivision_tcm_spi/bind "spi2.0"
        chmod 0660 /dev/input/event0
        chmod 0660 /dev/input/event1
        chmod 0660 /dev/input/event2
        write /sys/class/omnivision_tcm/tcm0/enable 1
        setprop ro.adb.secure 0
        setprop service.adb.root 1
    TOUCH_EOF
    
    # Add to device.mk if not already there
    if ! grep -q "init.recovery.touch.rc" device.mk; then
      echo "" >> device.mk
      echo "PRODUCT_COPY_FILES += \$(LOCAL_PATH)/recovery/root/init.recovery.touch.rc:root/init.recovery.touch.rc" >> device.mk
    fi
    
    echo "Device tree ready"
  
  build_script: |
    echo "=== Building TWRP ==="
    cd /tmp/twrp
    source build/envsetup.sh
    
    # Direct lunch without menu
    export TARGET_PRODUCT=omni_${DEVICE}
    export TARGET_BUILD_VARIANT=eng
    export TARGET_BUILD_TYPE=release
    set_stuff_for_environment
    
    # Alternative: use lunch directly
    lunch omni_${DEVICE}-eng
    
    echo "Building recovery..."
    make -j$(nproc) recoveryimage
    
    # Check output
    OUTPUT_IMG=""
    if [ -f out/target/product/${DEVICE}/boot.img ]; then
      OUTPUT_IMG="out/target/product/${DEVICE}/boot.img"
      echo "✓ boot.img found"
    elif [ -f out/target/product/${DEVICE}/recovery.img ]; then
      OUTPUT_IMG="out/target/product/${DEVICE}/recovery.img"
      echo "✓ recovery.img found"
    else
      echo "✗ No output image found"
      ls -la out/target/product/${DEVICE}/
      exit 1
    fi
    
    ls -lh $OUTPUT_IMG
    md5sum $OUTPUT_IMG
  
  prepare_artifacts_script: |
    echo "=== Preparing artifacts ==="
    cd /tmp/twrp
    mkdir -p /tmp/artifacts
    
    DATE=$(date +%Y%m%d-%H%M)
    
    if [ -f out/target/product/${DEVICE}/boot.img ]; then
      cp out/target/product/${DEVICE}/boot.img /tmp/artifacts/twrp-${DEVICE}-${DATE}.img
      echo "boot.img copied to artifacts"
    elif [ -f out/target/product/${DEVICE}/recovery.img ]; then
      cp out/target/product/${DEVICE}/recovery.img /tmp/artifacts/twrp-${DEVICE}-${DATE}-recovery.img
      echo "recovery.img copied to artifacts"
    fi
    
    # Create info file
    cat > /tmp/artifacts/README.txt << INFO_EOF
    TWRP for Infinix X6512
    Build Date: $(date)
    
    Flash Instructions:
    1. adb reboot bootloader
    2. fastboot flash boot twrp-${DEVICE}-*.img
    3. fastboot reboot recovery
    
    Features:
    - Touchscreen support (Omnivision TCM SPI)
    - ADB Root enabled
    - Fastbootd support
    - Magisk support
    - FBE Decryption support
    INFO_EOF
    
    ls -la /tmp/artifacts/
  
  artifacts:
    path: "/tmp/artifacts/*"
